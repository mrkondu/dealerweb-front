/* eslint-disable @next/next/no-img-element */
"use client";
import { useGetCategoryProduct } from "@/api/getCategoryProduct";
import { Separator } from "@/components/ui/separator";
import { ResponseType } from "@/types/response";
import { useParams, useRouter } from "next/navigation";
import FiltersControlsCategory from "./components/filters-controls-category";
import {
  Carousel,
  CarouselContent,
  CarouselItem,
  CarouselNext,
  CarouselPrevious,
} from "@/components/ui/carousel";
import SkeletonSchema from "@/components/skeletonSchema";
import { ProductType } from "@/types/product";
import { Card, CardContent } from "@/components/ui/card";
import IconButton from "@/components/icon-button";
import { Expand, ShoppingCart } from "lucide-react";
import Link from "next/link";
import { formatPrice } from "@/lib/formatPrice";
import ProductCard from "./components/product-card";
import Image from "next/image";

export default function Page() {
  const params = useParams();
  const { categorySlug } = params;
  const { result, loading }: ResponseType = useGetCategoryProduct(categorySlug);
  const router = useRouter();

  return (
    <div className="max-w-6xl py-4 mx-auto sm:py-16 sm:px-24">
      {result !== null && !loading && (
        <h1 className="text-3xl font-medium">
          Equipos {result[0].attributes.category.data.attributes.categoryName}
        </h1>
      )}
      <Separator />

      <p>Filtros por color o capacidad </p>
      <div className="sm:flex sm:justify-between">
        <FiltersControlsCategory />

        <div className="grid gap-5 mt-8 md:grid-cols-3 md:gap-10">
          {loading && <SkeletonSchema grid={3} />}
          {result !== null &&
            !loading &&
            result.map((product: ProductType) => (
              <ProductCard key={product.id} product={result} />
            ))}
        </div>
      </div>

      {/* <Carousel>
          <CarouselContent className="-ml-2 md:-ml-4">
            {loading && <SkeletonSchema grid={3} />}
            {result != null &&
              result.map((product: ProductType) => {
                const { attributes, id } = product;
                const {
                  slug,
                  images,
                  productName,
                  capacityProduct,
                  category,
                  productPrice,
                } = attributes;
                const categoryName = category?.data?.attributes?.categoryName;
                return (
                  <CarouselItem
                    key={id}
                    className="md:basis-1/2 lg:basis-1/3 group"
                  >
                    <Link
                      className="p-1"
                      href={`/product/${product.attributes.slug}`}
                    >
                      <Card className="py-4 border border-gray-200 shadow-none">
                        <CardContent className="relative flex items-center justify-center px-6 py-2 ">
                          <img
                            src={`${process.env.NEXT_PUBLIC_BACKEND_URL}${images.data[0].attributes.url}`}
                            alt="Image Featured"
                            className="w-full h-48 md:h-64 object-cover rounded-lg"
                          />

                          <div className="absolute w-full px-6 transition duration-200 opacity-0 group-hover:opacity-100 bottom-5">
                            <div className="flex justify-center gap-x-6">
                              <IconButton
                                onClick={() => router.push(`product/${slug}`)}
                                icon={<Expand size={20} />}
                                className="text-gray-600"
                              />
                              <IconButton
                                onClick={() => console.log("add item...")}
                                icon={<ShoppingCart size={20} />}
                                className="text-gray-600"
                              />
                            </div>
                          </div>
                        </CardContent>
                        <div className="flex justify-between gap-4 px-8 mb-2">
                          <h3 className="text-lg font-bold"> {productName}</h3>
                        </div>
                        <div className="flex justify-between gap-4 px-8">
                          <p className="">{capacityProduct}</p>
                        </div>
                        <div className="flex justify-center pb-2 py-5">
                          <p className="w-1/2 font-bold text-base rounded-full bg-black p-3 text-center text-white dark:bg-white dark:text-black">
                            {formatPrice(productPrice)}
                          </p>
                        </div>
                      </Card>
                    </Link>
                  </CarouselItem>
                );
              })}
          </CarouselContent>
          <CarouselPrevious />
          <CarouselNext />
        </Carousel> */}
    </div>
  );
}
